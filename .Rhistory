regexpr(pattern, y1)
y1<-grep(pattern, u2, value=TRUE)
regexpr(pattern, y1)
z1<-regexpr(pattern, y1)
regmatches(y1,z1 )
u2<- c("11111<9qzzzzzzzzzzzzzzzzzz9z>1111", "55<q4Q>", ":5", "!!!4 ????", "akkkkz",
u2<- c("11111<9qzzzzzzzzzzzzzzzzzz9z>1111", "55<q4Q>", ":5", "!!!4 ????", "akkkkz",
"12a45", "5aa4Zqq")
u1<- "I live at 600 Graystone Ct. in Henderson, 42420"
pattern = "<(.*)>"
y1<-grep(pattern, u2, value=TRUE)
z1<-regexpr(pattern, y1)
regmatches(y1,z1 )
u2
pattern
y1
z1
zz1<-regmatches(y1,z1 )
zz1
u2<- c("11111<9qzzzzzzzzzzzzzzzzzz9z>1111", "55<q4Q>", "<:5", "!!!4 ????", "akkkkz",
"12a45", "5aa4Zqq")
u1<- "I live at 600 Graystone Ct. in Henderson, 42420"
pattern = "<(.*)>"
y1<-grep(pattern, u2, value=TRUE)
z1<-regexpr(pattern, y1)
zz1<-regmatches(y1,z1 )
zz1
url<-"http://www.defense.gov"
?readLines
url<-"http://www.defense.gov"
readLines(url)
DoD<-readLines(url)
x1<-grep("Hagel", DoD)
x1<-grep("Hagel", DoD)
x1
x1<-grep("Hagel", DoD, value=TRUE)
x1
pattern = "Hagel|Chuck"
x1<-grep(pattern, DoD, value=TRUE)
x1
pattern = "Hagel|Chuck|Chuck Hagel"
x1<-grep(pattern, DoD, value=TRUE)
pattern = "[Hh]agel| [Cc]huck|[Cc]huck [Hh]agel"
x1<-grep(pattern, DoD, value=TRUE)
x1
?grep
y1<-regexpr(pattern, x1)
y1
z1<-regmatches(x1,y1)
z1
x1<-grep("Chuck Hagel", DoD, value=TRUE)
y1<-regexpr(pattern, x1)
z1<-regmatches(x1,y1)
z1
Dod[1:5]
DoD[1:5]
pattern = "<(.*)>"
x1<-grep(pattern, DoD, value=TRUE)
y1<-regexpr(pattern, x1)
pattern = "<(.*)>"
x1<-grep(pattern, DoD, value=TRUE)
y1<-regexpr(pattern, x1)
z1<-regmatches(x1,y1)
z1
pattern = "http"
x1<-grep(pattern, DoD, value=TRUE)
x1
x1[99]
pattern = "<a href=(.*)"
pattern = "<a href=(.*)"
x1<-grep(pattern, DoD, value=TRUE)
x1
pattern = "<a href=\(.*)"
x1<-grep(pattern, DoD, value=TRUE)
pattern = "<a href=\\(.*)"
x1<-grep(pattern, DoD, value=TRUE)
x1
pattern = "<a href=(.*)>"
x1<-grep(pattern, DoD, value=TRUE)
x1
y1<-regexpr(pattern, x1)
z1<-regmatches(x1,y1)
z1
pattern = "<a href=(.*)>"
x1<-grep(pattern, DoD, value=TRUE)
y1<-regexpr(pattern, x1)
z1<-regmatches(x1,y1)
z1[1:5]
a<-1:3
b<-letters[1:3]
df.a<-as.data.frame(cbind(a,b))
a1<-4:6
b1<-letters[4:6]
df.b<-as.data.frame(cbind(a1,b1))
dataframes <- ls(pattern="df")
mylist<- sapply(dataframes, get, environment(), simplify = FALSE)
divide <- function(a){a/2}
for (i in 1:length(ls())){
if (is.data.frame(get(ls()[i]))==TRUE){
print(ls()[i])
for (i in 1:length(ls())){
if (is.data.frame(get(ls()[i]))==TRUE){
print (ls()[i])
print (dim(get(ls()[i])))
}
}
for (i in 1:length(ls())){
if (is.data.frame(get(ls()[i]))==TRUE){
print (ls()[i])
print (dim(get(ls()[i])))
}
}
?col
str(df.a)
apply(df.a, 1, class)
apply(df.a, 2, class)
df.a
sum(df.a[,1])
mylist
x
x <- 2:12
x
x[x>6]
x[1]
x[1:4]
x[nchar(x)>1]
x[nchar(x)>1 & x>5]
x[nchar(x)>1 | x>5]
x[nchar(x)<1 | x>5]
x[nchar(x)<1 && x>5]
x[nchar(x)<1 & x>5]
x[nchar(x)<2 & x>5]
length(x)
?sample
x[sample(x, size=5, replace = FALSE)]
x[c(1,3,5,7,9,11)]
?seq
x[seq(from=1, to = 11, by=2)]
x==2
[x==2]
x[x==2]
x==2
?indes
?index
?::
?:
rev(x)
sort(x)
order(x)
x==2
grep(2, x)
x[grep(2, x)]
x[grep("2", x)]
x[grep(7, x)]
grep(7, x)
rank(x)
?rank
x[min(x) & max(x)]
min(x)
max(x)
x[2 & 12]
x[2]
x[12]
length(x[2])
x[2]
x[2]
x[2 & 12]
x[x<min(x)]
x[x==min(x)]
x[x==min(x) & x==max(x)]
min(x)
max(x)
x[x==2]
x[x==12]
min(x)
max(x)
x< max(x)
x[x<max(x)]
x[x<max(x) & x>min(x)]
x[0]
x[x==0]
x
x<- seq(from = 20, to = 30, by = 2)
x
x[1]
x[x<24]
x[1:3]
x[c(1,2,3)]
nchar(x)
min(x)
max(x)
x==30
sort(x)
x<- append (x, 7)
x
length(x)
x[length(x)]
min(x)
dir()
?sample
sample(1:1e5, size=1e5, replace= TRUE)
1e5
1e5
1000000
100000
?system.time
system.time(sample(1:1e6, 1e6))
sample(1:1e6, 1e6)
system.time(sample(1:1e6, 1e6))
?fibonacci
??fibonacci
system.time(dir())
system.time(2*2)
x
x<-1:10
x
dim(x)
x<-matrix(x, 2, 5)
x
x<-1:10
x<-matrix (x, 2, 5, by=col)
x<-matrix (x, 2, 5, byrow=TRUE)
x
x==2
x<-as.data.frame(x)
x
x==2
x[,2]==2
which(x==2)
class(x)
?which
which(row==2)
which(x==2)
x[x==2]
x[which(x==2)]
x==2
which(x==2)
x[3]
x
x3
x[3]
x[4]
x[, 1==2]
rownames(x)
x[1]
x[,1]
x[1:2]
x[,1]
x[,2]
x[,1:2]
x[1,]
x[1:2,]
x[1,]==2
which(x[1,]==2)
x[1,]==2
x[,1:5=="2"]
x[1,]=="2"
which(x[1,]=="2")
x[1:nrow(x),]
x[1:nrow(x),]==2
which(x[1:nrow(x),]==2)
grep(2, x)
x
sum(x[1,])
sapply(x, sum)
apply(x, 1, sum)
apply(x, 2, sum)
apply(x, 2, mean)
apply(x, 1, mean)
apply(x, 2, mean)
lapply(x, mean)
dim(m) <- c(2,2,3)
m<-matrix(1:12, 3,4)
m
div.3 <-m %% 3==0
div.3
which(div.3)
which(div.3, arr.ind = TRUE)
which (div.3, arr.ind==TRUE)
rownames(m)
rownames(m) <- paste ("Case", 1:3, sep = "_")
rownames(m)
which (m %% 5==0, arr.ind = TRUE)
class(m)
m
dim (m) <- c(2,2,3)
m
which (div.3, arr.ind= FALSE)
which (div.3, arr.ind= TRUE)
m
vm<- c(m)
vm
dim(vm)
dim (vm) <- length (vm)
dim (vm)
which (vm %% 3 ==0, arr.ind = TRUE)
vm
x
which (x %% 5==0, arr.ind=TRUE)
?%%
?
\%%
?datasets
getwd()
?library
library (help = "datasets")
require(cars)
cars
cars <- cars
View(cars)
plot(cars$speed, cars$dist)
glm(cars)
datasets
library (help = datasets)
ap <- AirPassengers
ap <- as.data.frame (ap)
View(ap)
names (ap)
plot (ap$x)
names(ap)
names (ap) <- "Passengers"
View(ap)
plot (ap$Passengers)
plot (ap$passengers, xlab= "Years", ylab = "Passengers")
?plot
str(ap)
mode(ap)
type(ap)
ap
plot (ap$passengers,
type = "l",
main = "Monthly Passenger Volume",
xlab= "Years",
ylab = "Passengers")
plot (ap,
type = "l",
main = "Monthly Passenger Volume",
xlab= "Years",
ylab = "Passengers")
View(ap)
plot (ap,
type = "l",
main = "Monthly Passenger Volume",
sub = "1950-1960"
xlab= "Years",
ylab = "Passengers")
plot (ap,
type = "l",
main = "Monthly Passenger Volume",
sub = "1950-1960",
xlab= "Years",
ylab = "Passengers")
library (help = datasets)
AirPassengers
plot (ap,
type = "l",
main = "Monthly Passenger Volume",
sub = "1949-1960",
xlab= "Years",
ylab = "Passengers")
plot (cars,
type = "1")
plot (cars$speed,
cars$dist,
type = "p")
plot (cars$speed,
cars$dist,
type = "p",
main = "Stopping Distance",
xlab = "Speed",
ylab = "Distance")
par (pch = 21)
plot (ap,
type = "l",
main = "Monthly Passenger Volume",
sub = "1949-1960",
xlab= "Years",
ylab = "Passengers")
plot (cars$speed,
cars$dist,
type = "p",
main = "Stopping Distance",
xlab = "Speed",
ylab = "Distance")
plot (cars$speed,
cars$dist,
type = "p",
pch = 21,
main = "Stopping Distance",
xlab = "Speed",
ylab = "Distance")
par (pch = 18)
plot (ap,
type = "l",
main = "Monthly Passenger Volume",
sub = "1949-1960",
xlab= "Years",
ylab = "Passengers")
plot (cars$speed,
cars$dist,
type = "p",
pch = 18,
main = "Stopping Distance",
xlab = "Speed",
ylab = "Distance")
# Creating a Graph
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
windows()
windows()
a <- 1:50
b <- 2*a
plot (a,b)
save.image("~/linear.RData")
setwd("C:/Users/Chase/Desktop/GitHub/SAAR_Data")
saar <- read.table("SAAR.1999.2012.csv", header = TRUE, sep = ",")
saar <- read.table("SAAR.1999.2012.csv", header = TRUE, sep = ",")
AFGR <- read.csv(file = "AFGR_2012.csv",
sep = ",",
header = TRUE,
strip.white = TRUE,
colClasses = "character")
attach (AFGR)
#Diploma Recipients from KDE (DR.**)
DR.08<- AFGR[ which(Gender=='Total' & Ethnicity=='Total' & School.Name == 'DISTRICT TOTAL' & School.Year == '2008'), c (1, 5, 10)]
DR.09<- AFGR[ which(Gender=='Total' & Ethnicity=='Total' & School.Name == 'DISTRICT TOTAL' & School.Year == '2009'), c (1, 5, 10)]
DR.10<- AFGR[ which(Gender=='Total' & Ethnicity=='Total' & School.Name == 'DISTRICT TOTAL' & School.Year == '2010'), c (1, 5, 10)]
DR.11<- AFGR[ which(Gender=='Total' & Ethnicity=='Total' & School.Name == 'DISTRICT TOTAL' & School.Year == '2011'), c (1, 5, 10)]
DR.12<- AFGR[ which(Gender=='Total' & Ethnicity=='Total' & School.Name == 'DISTRICT TOTAL' & School.Year == '2012'), c (1, 5, 10)]
rm (AFGR)
detach (AFGR)
a <- saar$DISTRICT
b <- DR.08$District.Name
b[84]  <- "Jefferson County"
b[91]  <- "LaRue County"
b[110] <- "McCracken County"
b[111] <- "McCreary County"
b[112] <- "McLean County"
b[142] <- "Raceland Independent"
b[160] <- "Walton Verona Independent"
DR.08[,2] <- b
DR.09[,2] <- b
DR.10[,2] <- b
DR.11[,2] <- b
DR.12[,2] <- b
c <- names(saar)
c <- sub("X", "", c)
names(saar) <- c
names(DR.08)[2] <- "DISTRICT"
names(DR.09)[2] <- "DISTRICT"
names(DR.10)[2] <- "DISTRICT"
names(DR.11)[2] <- "DISTRICT"
names(DR.12)[2] <- "DISTRICT"
afgr.08.12 <- merge(DR.08, DR.09, by = "DISTRICT")
afgr.08.12 <- merge(afgr.08.12, DR.10, by = "DISTRICT")
afgr.08.12 <- merge(afgr.08.12, DR.11, by = "DISTRICT")
afgr.08.12 <- merge(afgr.08.12, DR.12, by = "DISTRICT")
afgr.08.12 <- afgr.08.12[, c(1,3,5,7,9,11)]
names(afgr.08.12)[2:6] <- paste (2008:2012, "Grad.w.Diploma.in.4.years", sep = ".")
rm(a,b,c,DR.08, DR.09, DR.10, DR.11, DR.12, saar)
write.table(afgr.08.12, file = "afgr.08.12.csv", sep = ",")
View(afgr.08.12)
saar <- read.table("SAAR.1999.2012.csv", header = TRUE, sep = ",")
AFGR <- read.csv(file = "AFGR_2012.csv",
sep = ",",
header = TRUE,
strip.white = TRUE,
colClasses = "character")
attach (AFGR)
#Diploma Recipients from KDE (DR.**) by year
DR.08<- AFGR[ which(Gender=='Total' & Ethnicity=='Total' & School.Name == 'DISTRICT TOTAL' & School.Year == '2008'), c (1, 5, 10)]
DR.09<- AFGR[ which(Gender=='Total' & Ethnicity=='Total' & School.Name == 'DISTRICT TOTAL' & School.Year == '2009'), c (1, 5, 10)]
DR.10<- AFGR[ which(Gender=='Total' & Ethnicity=='Total' & School.Name == 'DISTRICT TOTAL' & School.Year == '2010'), c (1, 5, 10)]
DR.11<- AFGR[ which(Gender=='Total' & Ethnicity=='Total' & School.Name == 'DISTRICT TOTAL' & School.Year == '2011'), c (1, 5, 10)]
DR.12<- AFGR[ which(Gender=='Total' & Ethnicity=='Total' & School.Name == 'DISTRICT TOTAL' & School.Year == '2012'), c (1, 5, 10)]
rm (AFGR)
detach (AFGR)
#create a common column for merge with SAAR data
b <- DR.08$District.Name
b[84]  <- "Jefferson County"
b[91]  <- "LaRue County"
b[110] <- "McCracken County"
b[111] <- "McCreary County"
b[112] <- "McLean County"
b[142] <- "Raceland Independent"
b[160] <- "Walton Verona Independent"
#assign common column to DR.** for merge
DR.08[,2] <- b
DR.09[,2] <- b
DR.10[,2] <- b
DR.11[,2] <- b
DR.12[,2] <- b
#assign common column name "DISTRICT"
names(DR.08)[2] <- "DISTRICT"
names(DR.09)[2] <- "DISTRICT"
names(DR.10)[2] <- "DISTRICT"
names(DR.11)[2] <- "DISTRICT"
names(DR.12)[2] <- "DISTRICT"
#merge
afgr.08.12 <- merge(DR.08, DR.09, by = "DISTRICT")
afgr.08.12 <- merge(afgr.08.12, DR.10, by = "DISTRICT")
afgr.08.12 <- merge(afgr.08.12, DR.11, by = "DISTRICT")
afgr.08.12 <- merge(afgr.08.12, DR.12, by = "DISTRICT")
afgr.08.12 <- afgr.08.12[, c(1,3,5,7,9,11)]
names (afgr.08.12)
paste (2008:2012, "Grad.w.Diploma.in.4.years", sep = ".")
paste (2008:2012, "Grad.w.Diploma.in.4.years", 2008:2012, sep = ".")
paste ("Grad.w.Diploma.in.4.years", 2008:2012, "KDE", sep = ".")
names(afgr.08.12)[2:6] <- paste ("Grad.w.Diploma.in.4.years", 2008:2012, "KDE", sep = ".")
View(afgr.08.12)
